/******************************************************************************

  版权所有 (C), 2017-2028, _ _ _ Co., Ltd.

 ******************************************************************************
  文件名称: debug_fuction.h
  版本编号: 初稿
  作     者: Leon
  生成日期: 2017年8月22日
  最近修改:
  功能描述   : 调试功能相关
  函数列表:
  修改历史:
  1.日     期: 2017年8月22日
    作     者: Leon
    修改内容: 创建文件
******************************************************************************/
#ifndef __DEBUG_FUNCTION_H__
#define __DEBUG_FUNCTION_H__

/*****************************************************************************/
#ifdef __cplusplus
#if __cplusplus
//extern "C"{
#endif
#endif /* __cplusplus */
/*****************************************************************************/


/******************************************************************************
 * 包含头文件
 ******************************************************************************/

/******************************************************************************
 * 外部变量声明
 ******************************************************************************/

/******************************************************************************
 * 外部函数声明
 ******************************************************************************/

/******************************************************************************
 * 全局变量
 ******************************************************************************/

/******************************************************************************
 * 宏定义
 ******************************************************************************/

/*
格式如下：
printf("\033[字背景颜色;字体颜色m 字符串 \033[0m" );

例子：
printf("\033[1m\033[45;33m HELLO_WORLD \033[0m\n");

颜色代码: QUOTE:
字背景颜色范围: 40--49                字颜色: 30—39
 40: 黑                           30: 黑
 41: 红                           31: 红
 42: 绿                           32: 绿
 43: 黄                           33: 黄
 44: 蓝                           34: 蓝
 45: 紫                           35: 紫
 46: 深绿                          36: 深绿
 47: 白色                          37: 白色
ANSI控制码:
 QUOTE:
  \033[0m   关闭所有属性
  \033[1m   设置高亮度
  \033[4m   下划线
  \033[5m   闪烁
  \033[7m   反显
  \033[8m   消隐
  \033[30m   --   \033[37m   设置前景色
  \033[40m   --   \033[47m   设置背景色
  \033[nA   光标上移n行
  \03[nB   光标下移n行
  \033[nC   光标右移n行
  \033[nD   光标左移n行

\033[ Param {;Param;...}m
或
\e[ Param {;Param;...}m

\033[显示方式;前景色;背景色m输出字符串\033[0m
或
\e[显示方式;前景色;背景色m输出字符串\033[0m
其中 ，'\033[0m'用于恢复默认的终端输出属性，否则会影响后续的输出。

     显示：0(默认)、1(粗体/高亮)、22(非粗体)、4(单条下划线)
、24(无下划线)、5(闪烁)、25(无闪烁)、7(
反显、翻转前景色和背景色)、27(无反显)

     颜色：0(黑)、1(红)、2(绿)、 3(黄)、4(蓝)、5(洋红)、6(青)
、7(白)

     前景色为30+颜色值，如31表示前景色为红色；背景色为40
+颜色值，如41表示背景色为红色。

因此，通过转义序列设置终端显示属性时，常见格式为：

     \033[显示方式;前景色;背景色m输出字符串\033[0m 或 \e[
显示方式;前景色;背景色m输出字符串\033[0m

     此外，还有一些ANSI控制码，如：nA (光标上移n行 )、nB(光标下移n行 )、
nC(光标右移n行 )、nD (光标左移n行 )、2J(清屏)、K(清除从光标到行尾的内容)、
s(保存光标位置)、u(恢复光标位置)、?25l(隐藏光标)、?25l(显示光标)。     其中，
'\033[0m'用于恢复默认的终端输出属性，否则会影响后续的输出。

*/

#define DEBUG_PRINT_FUNCTION_NAME_AND_LINE
#ifdef DEBUG_PRINT_FUNCTION_NAME_AND_LINE

	#define NONE                 "\e[0m"
	#define BLACK                "\e[0;30m"
	#define L_BLACK              "\e[1;30m"
	#define RED                  "\e[0;31m"
	#define L_RED                "\e[1;31m"
	#define GREEN                "\e[0;32m"
	#define L_GREEN              "\e[1;32m"
	#define BROWN                "\e[0;33m"
	#define YELLOW               "\e[1;33m"
	#define BLUE                 "\e[0;34m"
	#define L_BLUE               "\e[1;34m"
	#define PURPLE               "\e[0;35m"
	#define L_PURPLE             "\e[1;35m"
	#define CYAN                 "\e[0;36m"
	#define L_CYAN               "\e[1;36m"
	#define GRAY                 "\e[0;37m"
	#define WHITE                "\e[1;37m"

	#define BOLD                 "\e[1m"
	#define UNDERLINE            "\e[4m"
	#define BLINK                "\e[5m"
	#define REVERSE              "\e[7m"
	#define HIDE                 "\e[8m"
	#define CLEAR                "\e[2J"
	#define CLRLINE              "\r\e[K" //or "\e[1K\r"

	#define COLOR_BLACK          "\033[30m"
	#define COLOR_RED            "\033[31m"
	#define COLOR_GREEN          "\033[32m"
	#define COLOR_YELLOW         "\033[33m"
	#define COLOR_BLUE           "\033[34m"
	#define COLOR_PURPLE         "\033[35m"
	#define COLOR_DGREEN         "\033[36m"
	#define COLOR_WHITE          "\033[37m"
	#define COLOR_NONE           "\033[0m"

	#define debug_print_source_line()    do{\
				printf(COLOR_GREEN "[ Debug ]Run to:File name \"%s\", line = %d, %s()." COLOR_NONE "\n", \
										 __FILE__, __LINE__, __func__);\
			}while(0)

	#define debug_print_info(format, ...)\
		printf(COLOR_BLUE "[INFO]:" COLOR_NONE COLOR_DGREEN "%s():" COLOR_NONE UNDERLINE "line=" "%d:" COLOR_NONE format "\n",\
		__func__, __LINE__, ##__VA_ARGS__)
	#define debug_print_warnning(format, ...)\
		printf(COLOR_YELLOW "[WARNNING]:" COLOR_NONE "%s():" COLOR_YELLOW "line=" "%d:" COLOR_NONE format "\n",\
		__func__, __LINE__, ##__VA_ARGS__)
	#define debug_print_error(format, ...)\
		printf(COLOR_RED "[ERROR]:" COLOR_NONE "%s():" COLOR_RED "line=" "%d:" COLOR_NONE format "\n",\
		__func__, __LINE__, ##__VA_ARGS__)
	#define debug_print_fatal(format, ...)\
		printf(COLOR_PURPLE "[FATAL]:" COLOR_NONE "%s():" COLOR_PURPLE "line=" "%d:" COLOR_NONE format "\n",\
		__func__, __LINE__, ##__VA_ARGS__)
#else
	#define debug_print_source_line()
	#define debug_print_info(format, ...)
	#define debug_print_warnning(format, ...)
	#define debug_print_error(format, ...)
	#define debug_print_fatal(format, ...)
#endif

/******************************************************************************
 * 常量声明
 ******************************************************************************/

/******************************************************************************
 * 枚举类型
 ******************************************************************************/

/******************************************************************************
 * 结构体类型
 ******************************************************************************/

/******************************************************************************
 * 类声明
 ******************************************************************************/

/******************************************************************************
 * 内部函数声明
 ******************************************************************************/

/*****************************************************************************/
#ifdef __cplusplus
#if __cplusplus
//}
#endif
#endif /* __cplusplus */
/*****************************************************************************/

#endif /* __DEBUG_FUNCTION_H__ */


